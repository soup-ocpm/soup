# For WebSocket tracking process (actually not use)
def track_class_graph_creation_progress_c(socketio, db_connector, start_time):
    try:
        while True:
            class_nodes_count = OperationClassGraphService.get_count_class_nodes_s(db_connector)
            obs_rel_count = OperationClassGraphService.get_count_obs_relationships_s(db_connector)
            dfc_rel_count = OperationClassGraphService.get_count_dfc_relationships_s(db_connector)

            total_relationships = obs_rel_count + dfc_rel_count

            socketio.emit('progress', {
                'class_nodes': class_nodes_count,
                'obs_relationships': obs_rel_count,
                'dfc_relationships': dfc_rel_count,
                'total_relationships': total_relationships,
                'elapsed_time': time.time() - start_time
            })

            if have_finished:
                break

            time.sleep(2)

        socketio.emit('complete', {
            'message': 'Graph creation complete',
            'class_nodes': class_nodes_count,
            'total_relationships': total_relationships,
            'total_time': time.time() - start_time
        })

    except Exception as ex:
        print(f"Error in track_graph_creation_progress: {ex}")
        socketio.emit('error', {'message': str(ex)})